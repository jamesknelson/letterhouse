---
import type { Site } from 'letterhouse'

import { getSite } from 'letterhouse'

import SiteHead from '../components/SiteHead.astro'

export interface Props {
  hideBrand?: boolean
  site?: Site
}

export interface MenuItem {
  href: string
  label: string
}

const { hideBrand, site = await getSite() } = Astro.props as Props
const { author, blurb = null, language, menu, title, wip } = site
---

<!DOCTYPE html>
<html lang={language}>
  <head>
    <slot name='head'>
      <SiteHead
        siteTitle={title}
        title={title}
        description={blurb}
        lightning={author.lightning}
      />
    </slot>
  </head>

  <body>
    <div id='site'>
      <header>
        <div class='inner'>
          {hideBrand ? (
            <div />
          ) : (
            <div class="site-title">
              <h1>
                <a href="/">{title}</a>
              </h1>
            </div>
          )}

          <nav class='site-menu'>
            <ul>
              {wip && (
                <li class="wip">
                  <a href="/wip">WIPs</a>
                </li>
              )}
              {menu.map((item) => (
                <li>
                  <a href={item.href}>{item.label}</a>
                </li>
              ))}
            </ul>
          </nav>
        </div>
      </header>
      <slot name='hero'></slot>
      <main>
        <div class='body'>
          <slot></slot>
        </div>
        <aside class='margin'>
          <slot name='margin'></slot>
        </aside>
      </main>
      <footer>
        <section class='copyright'>
          &copy; {new Date().getFullYear()}
          {author.name}
        </section>
      </footer>
    </div>
  </body>
</html>

<style>
  html {
    background-color: var(--color-bg);
    color: var(--color-on-bg);
    box-sizing: border-box;
    font-family: Karla, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
      Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
      sans-serif;
    font-size: calc(var(--dim-rem-to-px) * 1px);
    height: 100%;
    line-height: 1.5rem;
    min-height: 100%;
    overflow-x: hidden;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  body,
  #site {
    height: 100%;
    min-height: 100%;

    display: flex;
    flex-direction: column;
    align-items: stretch;
  }

  #site,
  main {
    display: flex;
    flex-grow: 1;
  }

  main,
  header > .inner {
    margin: 0 auto;
    width: 100%;
    max-width: 1200px;
  }

  header {
    & > .inner {
      display: flex;
      align-items: center;
      justify-content: space-between;

      @media (--min-medium) {
        padding: 0 2rem;
      }

      @media (--small) {
        padding: 0 0.5rem;
      }

      @media (--max-medium) {
        flex-direction: column;
      }

      @media (--large) {
        flex-direction: row;
        height: 56px;
      }
    }

    border-bottom: 1px solid var(--color-surface-border);

    @media (--max-medium) {
      margin-bottom: 0.5rem;
    }
    @media (--large) {
      margin-bottom: 1.5rem;
    }

    & .site-title {
      & h1 {
        font-family: UnifrakturMaguntia, Georgia, 'Times New Roman', Times,
          serif;
        font-size: 1.5rem;
        line-height: 1.5rem;
        margin: 0;

        & a {
          color: var(--color-on-bg);
          color: var(--color-primary);
        }
      }

      & p {
        font-size: 1.5rem;
        line-height: 1.5rem;
        margin: 0.5rem 0;
        opacity: 0.7;
      }

      @media (--max-medium) {
        margin-top: 1.25rem;
        margin-bottom: 0.25rem;
      }
    }
  }

  nav {
    display: flex;
    margin: 0.25rem 0;
    border-width: 1px 0 1px 0;

    & ul,
    & li {
      flex-grow: 1;
      display: flex;
      justify-content: center;
      padding: 0;
      margin: 0;

      @media (--large) {
        gap: 1rem;
      }

      @media (--max-medium) {
        flex-wrap: wrap;
        line-height: 1rem;
        margin: 0.25rem;
      }
    }

    & a {
      color: var(--color-primary);
      padding: 0.5rem;
      text-transform: uppercase;
      line-height: 0;
      letter-spacing: 1px;
      font-size: 13px;

      &:hover {
        color: var(--color-secondary);
      }
    }

    & li.wip a:hover {
      color: rgb(var(--rgb-tertiary));
    }
  }

  main {
    display: flex;
    align-items: stretch;
    margin: 0 auto;
    width: 100%;
    max-width: 1200px;

    @media (--min-medium) {
      padding: 0 2rem;
    }

    @media (--small) {
      padding: 0 0.5rem;
    }

    @media (--max-medium) {
      flex-direction: column;
    }

    @media (--large) {
      flex-direction: row;
    }

    & > * {
      flex-grow: 1;
      flex-shrink: 5;
    }

    & .margin {
      display: flex;
      flex-direction: column;
      align-items: stretch;
      justify-content: flex-start;

      flex-basis: 220px;
      flex-grow: 0;
      flex-shrink: 0;

      @media (--max-medium) {
        align-items: center;
        text-align: center;
        padding: 2rem 1rem;
      }

      @media (--large) {
        align-items: stretch;
        margin-left: 2rem;
      }

      & > section {
        margin-top: 2rem;
      }
    }
  }

  footer {
    text-align: center;
    opacity: 0.4;
    padding: 4rem 1rem 2rem;
  }
</style>
